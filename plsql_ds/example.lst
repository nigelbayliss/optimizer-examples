SQL> @example
SQL> column pref_value format a30
SQL> column procedure_name format a20
SQL> set trims on
SQL> set tab off
SQL> --
SQL> -- We want plans without the result cache
SQL> --
SQL> alter session set result_cache_mode = 'MANUAL';

Session altered.

SQL> 
SQL> @@tab
SQL> --
SQL> -- Create a test table
SQL> --
SQL> 
SQL> drop table if exists t1;

Table dropped.

SQL> 
SQL> create table t1 (a number, b number);

Table created.

SQL> 
SQL> begin
  2    for i in 1..100
  3    loop
  4       for j in 1..i
  5       loop
  6          insert into t1 values (i,i*2);
  7       end loop;
  8    end loop;
  9  end;
 10  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --
SQL> -- No stats are gathered so that dynamic sampling will be used
SQL> --
SQL> exec dbms_stats.lock_table_stats(user,'t1');

PL/SQL procedure successfully completed.

SQL> @@pack
SQL> --
SQL> -- Create a simple package containing three functions
SQL> -- fnum returns the value passed in as a parameter
SQL> -- fnum2 returns twice the value passed in as a parameter
SQL> -- ftab returns a table with N rows (where N is a parameter)
SQL> -- fpipe returns a pipelined table with N rows (where N is a parameter)
SQL> --
SQL> drop package ds_test;
drop package ds_test
*
ERROR at line 1:
ORA-04043: Object DS_TEST does not exist.


SQL> drop type num_tab;
drop type num_tab
*
ERROR at line 1:
ORA-04043: Object NUM_TAB does not exist.


SQL> drop type num_row;
drop type num_row
*
ERROR at line 1:
ORA-04043: Object NUM_ROW does not exist.


SQL> 
SQL> create type num_row as object (
  2    n number);
  3  /

Type created.

SQL> 
SQL> create type num_tab as table of num_row;
  2  /

Type created.

SQL> 
SQL> 
SQL> create or replace package ds_test as
  2    function fnum (p_n in number) return number deterministic;
  3    function fnum2 (p_n in number) return number deterministic;
  4    function ftab (p_rows in number) return num_tab deterministic;
  5    function fpipe (p_rows in number) return num_tab pipelined deterministic;
  6  end ds_test;
  7  /

Package created.

SQL> 
SQL> show errors
No errors.
SQL> 
SQL> 
SQL> create or replace package body ds_test as
  2  
  3    function fnum (p_n in number) return number  deterministic is
  4    begin
  5       return p_n;
  6    end;
  7  
  8    function fnum2 (p_n in number) return number  deterministic is
  9    begin
 10       return p_n*2;
 11    end;
 12  
 13    function ftab (p_rows in number) return num_tab deterministic is
 14       t num_tab := num_tab();
 15    begin
 16       for i in 1..p_rows
 17       loop
 18           t.extend;
 19           t(t.last) := num_row(i);
 20       end loop;
 21       return t;
 22    end;
 23  
 24    function fpipe (p_rows in number) return num_tab pipelined deterministic is
 25       t num_tab := num_tab();
 26    begin
 27       for i in 1..p_rows
 28       loop
 29          pipe row(num_row(i));
 30       end loop;
 31       return;
 32    end;
 33  
 34  end ds_test;
 35  /

Package body created.

SQL> 
SQL> show errors
No errors.
SQL> 
SQL> create or replace function top_level(p_n number)  return number deterministic as
  2  begin
  3     return p_n;
  4  end;
  5  /

Function created.

SQL> show errors
No errors.
SQL> 
SQL> select ds_test.fnum(20) from dual;

DS_TEST.FNUM(20)
----------------
              20

SQL> select ds_test.fnum2(20) from dual;

DS_TEST.FNUM2(20)
-----------------
               40

SQL> select * from table(ds_test.ftab(5));

         N
----------
         1
         2
         3
         4
         5

SQL> select * from table(ds_test.fpipe(5));

         N
----------
         1
         2
         3
         4
         5

SQL> 
SQL> --
SQL> --  Report actual stats for queries
SQL> --
SQL> alter session set statistics_level='ALL';

Session altered.

SQL> 
SQL> prompt TEST 1 =========================================================================================
TEST 1 =========================================================================================
SQL> --
SQL> --  Control PL/SQL dynamic sampling with preferences
SQL> --
SQL> exec dbms_stats.set_global_plsql_prefs('dynamic_stats','OFF')

PL/SQL procedure successfully completed.

SQL> select dbms_stats.get_plsql_prefs('dynamic_stats') pref_value
  2  from dual;

PREF_VALUE
------------------------------
OFF

SQL> 
SQL> --
SQL> -- With dynamic sampling, our literal example yields good estimates
SQL> --
SQL> select /* Q1 */ count(*)
  2  from   t1
  3  where  (a = 20 and  b = 40)
  4  or      a = 10;

  COUNT(*)
----------
        30

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  gabc002nf9qk4, child number 0
-------------------------------------
select /* Q1 */ count(*) from   t1 where  (a = 20 and  b = 40) or
a = 10

Plan hash value: 3724264953

-----------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                  | Name | Starts | E-Rows |E-Bytes| Cost (%CPU)| E-Time   | A-Rows |   A-Time   | Buffers |
-----------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT           |      |      1 |        |       |     2 (100)|          |      1 |00:00:00.01 |      16 |
|   1 |  SORT AGGREGATE            |      |      1 |      1 |    26 |            |          |      1 |00:00:00.01 |      16 |
|*  2 |   TABLE ACCESS STORAGE FULL| T1   |      1 |     30 |   780 |     2   (0)| 00:00:01 |     30 |00:00:00.01 |      16 |
-----------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - storage(("A"=10 OR ("A"=20 AND "B"=40)))
       filter(("A"=10 OR ("A"=20 AND "B"=40)))

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of no expensive parallel operation


26 rows selected.

SQL> 
SQL> --
SQL> -- Dynamic sampling is enabled, but PL/SQL dynamic samping is disabled
SQL> -- The estimates will not be accurate when functions are used like this
SQL> --
SQL> select /* Q2 */ count(*)
  2  from   t1
  3  where  (a = ds_test.fnum(20) and b = ds_test.fnum2(40))
  4  or     a = 10;

  COUNT(*)
----------
        10

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  gnm77gzhq6b58, child number 0
-------------------------------------
select /* Q2 */ count(*) from   t1 where  (a = ds_test.fnum(20) and b =
ds_test.fnum2(40)) or     a = 10

Plan hash value: 3724264953

-----------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                  | Name | Starts | E-Rows |E-Bytes| Cost (%CPU)| E-Time   | A-Rows |   A-Time   | Buffers |
-----------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT           |      |      1 |        |       |     3 (100)|          |      1 |00:00:00.01 |      16 |
|   1 |  SORT AGGREGATE            |      |      1 |      1 |    26 |            |          |      1 |00:00:00.01 |      16 |
|*  2 |   TABLE ACCESS STORAGE FULL| T1   |      1 |     51 |  1326 |     3  (34)| 00:00:01 |     10 |00:00:00.01 |      16 |
-----------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - storage(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))
       filter(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of no expensive parallel operation


26 rows selected.

SQL> 
SQL> --
SQL> -- Dynamic sampling is enabled, but PL/SQL dynamic samping is disabled
SQL> -- The estimates will not be accurate when functions are used like this
SQL> --
SQL> select /* Q3 */ count(*)
  2  from table(ds_test.ftab(1000));

  COUNT(*)
----------
      1000

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  4xwwmx5csw1px, child number 0
-------------------------------------
select /* Q3 */ count(*) from table(ds_test.ftab(1000))

Plan hash value: 1480606654

-------------------------------------------------------------------------------------------------------------------
| Id  | Operation                          | Name | Starts | E-Rows | Cost (%CPU)| E-Time   | A-Rows |   A-Time   |
-------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                   |      |      1 |        |     3 (100)|          |      1 |00:00:00.01 |
|   1 |  SORT AGGREGATE                    |      |      1 |      1 |            |          |      1 |00:00:00.01 |
|   2 |   COLLECTION ITERATOR PICKLER FETCH| FTAB |      1 |   8168 |     3   (0)| 00:00:01 |   1000 |00:00:00.01 |
-------------------------------------------------------------------------------------------------------------------

Note
-----
   - automatic DOP: Computed Degree of Parallelism is 1 because of parallel threshold


18 rows selected.

SQL> 
SQL> pause p...
p...

SQL> 
SQL> prompt TEST 2 =========================================================================================
TEST 2 =========================================================================================
SQL> --
SQL> -- Go back to default preference settings
SQL> --
SQL> exec dbms_stats.set_global_plsql_prefs('dynamic_stats',null)

PL/SQL procedure successfully completed.

SQL> select dbms_stats.get_plsql_prefs('dynamic_stats') pref_value
  2  from dual;

PREF_VALUE
------------------------------
CHOOSE

SQL> 
SQL> --
SQL> -- PL/SQL DS global preference is CHOOSE, and consistent with
SQL> -- pre-RU23.8, PL/SQL dynamic sampling will be used for the function
SQL> -- Estimate is good
SQL> --
SQL> select /* Q4 */ count(*)
  2  from   t1
  3  where  (a = ds_test.fnum(20) and b = ds_test.fnum2(40))
  4  or     a = 10;

  COUNT(*)
----------
        10

SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  ah7bjtm276n69, child number 0
-------------------------------------
select /* Q4 */ count(*) from   t1 where  (a = ds_test.fnum(20) and b =
ds_test.fnum2(40)) or     a = 10

Plan hash value: 3724264953

-----------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                  | Name | Starts | E-Rows |E-Bytes| Cost (%CPU)| E-Time   | A-Rows |   A-Time   | Buffers |
-----------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT           |      |      1 |        |       |     3 (100)|          |      1 |00:00:00.01 |      16 |
|   1 |  SORT AGGREGATE            |      |      1 |      1 |    26 |            |          |      1 |00:00:00.01 |      16 |
|*  2 |   TABLE ACCESS STORAGE FULL| T1   |      1 |     10 |   260 |     3  (34)| 00:00:01 |     10 |00:00:00.01 |      16 |
-----------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - storage(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))
       filter(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of no expensive parallel operation


26 rows selected.

SQL> 
SQL> --
SQL> -- PL/SQL DS global preference is CHOOSE, and consistent with
SQL> -- pre-RU23.8, PL/SQL dynamic sampling will be NOT be used for a
SQL> -- table function
SQL> -- Estimate is poor
SQL> --
SQL> select /* Q5 */ count(*)
  2  from table(ds_test.ftab(1000));

  COUNT(*)
----------
      1000

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  anq934spxwqh3, child number 0
-------------------------------------
select /* Q5 */ count(*) from table(ds_test.ftab(1000))

Plan hash value: 1480606654

-------------------------------------------------------------------------------------------------------------------
| Id  | Operation                          | Name | Starts | E-Rows | Cost (%CPU)| E-Time   | A-Rows |   A-Time   |
-------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                   |      |      1 |        |     3 (100)|          |      1 |00:00:00.01 |
|   1 |  SORT AGGREGATE                    |      |      1 |      1 |            |          |      1 |00:00:00.01 |
|   2 |   COLLECTION ITERATOR PICKLER FETCH| FTAB |      1 |   8168 |     3   (0)| 00:00:01 |   1000 |00:00:00.01 |
-------------------------------------------------------------------------------------------------------------------

Note
-----
   - automatic DOP: Computed Degree of Parallelism is 1 because of parallel threshold


18 rows selected.

SQL> 
SQL> --
SQL> -- PL/SQL DS global preference is CHOOSE, however, consistent with
SQL> -- pre-RU23.8, PL/SQL dynamic sampling WILL be used for the
SQL> -- table function because of the hint
SQL> -- Estimate is good
SQL> --
SQL> select /* Q6 */ /*+ dynamic_sampling(6) */ count(*)
  2  from table(ds_test.ftab(1000));

  COUNT(*)
----------
      1000

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  59n5ws18kf12g, child number 0
-------------------------------------
select /* Q6 */ /*+ dynamic_sampling(6) */ count(*) from
table(ds_test.ftab(1000))

Plan hash value: 1480606654

-------------------------------------------------------------------------------------------------------------------
| Id  | Operation                          | Name | Starts | E-Rows | Cost (%CPU)| E-Time   | A-Rows |   A-Time   |
-------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                   |      |      1 |        |     3 (100)|          |      1 |00:00:00.01 |
|   1 |  SORT AGGREGATE                    |      |      1 |      1 |            |          |      1 |00:00:00.01 |
|   2 |   COLLECTION ITERATOR PICKLER FETCH| FTAB |      1 |   8168 |     3   (0)| 00:00:01 |   1000 |00:00:00.01 |
-------------------------------------------------------------------------------------------------------------------

Hint Report (identified by operation id / Query Block Name / Object Alias):
Total hints for statement: 1 (U - Unused (1))
---------------------------------------------------------------------------

   1 -  SEL$F5BB74E1
         U -  dynamic_sampling(6) / rejected by IGNORE_OPTIM_EMBEDDED_HINTS

Note
-----
   - automatic DOP: Computed Degree of Parallelism is 1 because of parallel threshold


26 rows selected.

SQL> 
SQL> pause p...
p...

SQL> 
SQL> prompt TEST 3 =========================================================================================
TEST 3 =========================================================================================
SQL> --
SQL> -- Enable dynamic sampling with PL/SQL functions
SQL> --
SQL> exec dbms_stats.set_global_plsql_prefs('dynamic_stats','ON')

PL/SQL procedure successfully completed.

SQL> select dbms_stats.get_plsql_prefs('dynamic_stats') pref_value from dual;

PREF_VALUE
------------------------------
ON

SQL> 
SQL> --
SQL> -- We get dynamic sampling and a good estimate for our PL/SQL functions
SQL> -- Estimate is good
SQL> --
SQL> select /* Q7 */ count(*)
  2  from   t1
  3  where  (a = ds_test.fnum(20) and b = ds_test.fnum2(40))
  4  or     a = 10;

  COUNT(*)
----------
        10

SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  g9s4rptmquqb2, child number 0
-------------------------------------
select /* Q7 */ count(*) from   t1 where  (a = ds_test.fnum(20) and b =
ds_test.fnum2(40)) or     a = 10

Plan hash value: 3724264953

-----------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                  | Name | Starts | E-Rows |E-Bytes| Cost (%CPU)| E-Time   | A-Rows |   A-Time   | Buffers |
-----------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT           |      |      1 |        |       |     3 (100)|          |      1 |00:00:00.01 |      16 |
|   1 |  SORT AGGREGATE            |      |      1 |      1 |    26 |            |          |      1 |00:00:00.01 |      16 |
|*  2 |   TABLE ACCESS STORAGE FULL| T1   |      1 |     10 |   260 |     3  (34)| 00:00:01 |     10 |00:00:00.01 |      16 |
-----------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - storage(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))
       filter(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of no expensive parallel operation


26 rows selected.

SQL> 
SQL> --
SQL> -- Dynamic sampling for PL/SQL table functions is enabled too
SQL> -- Estimate is good
SQL> --
SQL> select /* Q8 */ count(*)
  2  from table(ds_test.ftab(1000));

  COUNT(*)
----------
      1000

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  10d14mvqn3fv7, child number 0
-------------------------------------
select /* Q8 */ count(*) from table(ds_test.ftab(1000))

Plan hash value: 1480606654

-------------------------------------------------------------------------------------------------------------------
| Id  | Operation                          | Name | Starts | E-Rows | Cost (%CPU)| E-Time   | A-Rows |   A-Time   |
-------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                   |      |      1 |        |     2 (100)|          |      1 |00:00:00.01 |
|   1 |  SORT AGGREGATE                    |      |      1 |      1 |            |          |      1 |00:00:00.01 |
|   2 |   COLLECTION ITERATOR PICKLER FETCH| FTAB |      1 |   1000 |     2   (0)| 00:00:01 |   1000 |00:00:00.01 |
-------------------------------------------------------------------------------------------------------------------

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of parallel threshold


19 rows selected.

SQL> 
SQL> --
SQL> -- Also PL/SQL pipelined table functions
SQL> -- Estimate is good
SQL> --
SQL> select /* Q9 */ count(*)
  2  from table(ds_test.fpipe(500));

  COUNT(*)
----------
       500

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  ctdcsagzgzkg9, child number 0
-------------------------------------
select /* Q9 */ count(*) from table(ds_test.fpipe(500))

Plan hash value: 3899359126

--------------------------------------------------------------------------------------------------------------------
| Id  | Operation                          | Name  | Starts | E-Rows | Cost (%CPU)| E-Time   | A-Rows |   A-Time   |
--------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                   |       |      1 |        |     2 (100)|          |      1 |00:00:00.01 |
|   1 |  SORT AGGREGATE                    |       |      1 |      1 |            |          |      1 |00:00:00.01 |
|   2 |   COLLECTION ITERATOR PICKLER FETCH| FPIPE |      1 |    500 |     2   (0)| 00:00:01 |    500 |00:00:00.01 |
--------------------------------------------------------------------------------------------------------------------

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of parallel threshold


19 rows selected.

SQL> 
SQL> pause p...
p...

SQL> 
SQL> prompt TEST 4 =========================================================================================
TEST 4 =========================================================================================
SQL> exec dbms_stats.set_plsql_prefs(user,'ds_test',null,'dynamic_stats','OFF')

PL/SQL procedure successfully completed.

SQL> select dbms_stats.get_plsql_prefs('dynamic_stats',user,'ds_test','fnum') pref_value from dual;

PREF_VALUE
------------------------------
OFF

SQL> select dbms_stats.get_plsql_prefs('dynamic_stats',user,'ds_test','fnum2') pref_value from dual;

PREF_VALUE
------------------------------
OFF

SQL> 
SQL> --
SQL> -- This is the main usecase for this new feature
SQL> -- PL/SQL DS is enabled, but we want to explicitly prevent particular PL/SQL packages
SQL> -- from being called at parse time. In this example, PL/SQL dynamic has been
SQL> -- disabled specifically for the functions used in the query predicates
SQL> -- No PL/SQL DS, and estimate is not accurate
SQL> --
SQL> select /* Q10 */ count(*)
  2  from   t1
  3  where  (a = ds_test.fnum(20) and b = ds_test.fnum2(40))
  4  or     a = 10;

  COUNT(*)
----------
        10

SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  56hqz11rtx6d6, child number 0
-------------------------------------
select /* Q10 */ count(*) from   t1 where  (a = ds_test.fnum(20) and b
= ds_test.fnum2(40)) or     a = 10

Plan hash value: 3724264953

-----------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                  | Name | Starts | E-Rows |E-Bytes| Cost (%CPU)| E-Time   | A-Rows |   A-Time   | Buffers |
-----------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT           |      |      1 |        |       |     3 (100)|          |      1 |00:00:00.01 |     143 |
|   1 |  SORT AGGREGATE            |      |      1 |      1 |    26 |            |          |      1 |00:00:00.01 |     143 |
|*  2 |   TABLE ACCESS STORAGE FULL| T1   |      1 |     51 |  1326 |     3  (34)| 00:00:01 |     10 |00:00:00.01 |     143 |
-----------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - storage(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))
       filter(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of no expensive parallel operation


26 rows selected.

SQL> 
SQL> pause p...
p...

SQL> 
SQL> prompt TEST 5 =========================================================================================
TEST 5 =========================================================================================
SQL> --
SQL> -- Now turn the global preference off
SQL> --
SQL> exec dbms_stats.set_global_plsql_prefs('dynamic_stats','OFF')

PL/SQL procedure successfully completed.

SQL> select dbms_stats.get_plsql_prefs('dynamic_stats') pref_value from dual;

PREF_VALUE
------------------------------
OFF

SQL> --
SQL> -- The global preference has set PL/SQL DS OFF, but we can override with a preference set for the package
SQL> -- Note that get_plsql_prefs retrieves values for individual functions, not the whole package
SQL> -- The estimate is good again
SQL> --
SQL> exec dbms_stats.set_plsql_prefs(user,'ds_test',null,'dynamic_stats','ON')

PL/SQL procedure successfully completed.

SQL> select dbms_stats.get_plsql_prefs('dynamic_stats',user,'ds_test','fnum') pref_value from dual;

PREF_VALUE
------------------------------
ON

SQL> select dbms_stats.get_plsql_prefs('dynamic_stats',user,'ds_test','fnum2') pref_value from dual;

PREF_VALUE
------------------------------
ON

SQL> select procedure_name,
  2         dynamic_sampling_on,
  3         dynamic_sampling_off,
  4         dynamic_sampling_choose
  5  from   user_procedures
  6  where  procedure_name like 'FNUM%';

PROCEDURE_NAME       DYN DYN DYN
-------------------- --- --- ---
FNUM2                YES NO  NO
FNUM                 YES NO  NO

SQL> 
SQL> select /* Q11 */ count(*)
  2  from   t1
  3  where  (a = ds_test.fnum(20) and b = ds_test.fnum2(40))
  4  or     a = 10;

  COUNT(*)
----------
        10

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  435rgm9samx2p, child number 0
-------------------------------------
select /* Q11 */ count(*) from   t1 where  (a = ds_test.fnum(20) and b
= ds_test.fnum2(40)) or     a = 10

Plan hash value: 3724264953

-----------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                  | Name | Starts | E-Rows |E-Bytes| Cost (%CPU)| E-Time   | A-Rows |   A-Time   | Buffers |
-----------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT           |      |      1 |        |       |     3 (100)|          |      1 |00:00:00.01 |     143 |
|   1 |  SORT AGGREGATE            |      |      1 |      1 |    26 |            |          |      1 |00:00:00.01 |     143 |
|*  2 |   TABLE ACCESS STORAGE FULL| T1   |      1 |     10 |   260 |     3  (34)| 00:00:01 |     10 |00:00:00.01 |     143 |
-----------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - storage(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))
       filter(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of no expensive parallel operation


26 rows selected.

SQL> --
SQL> -- PL/SQL DS global pref is still OFF, and now delete the function preferences
SQL> --
SQL> exec dbms_stats.delete_plsql_prefs(user,'ds_test',null,'dynamic_stats')

PL/SQL procedure successfully completed.

SQL> --
SQL> -- No PL/SQL DS because we've deleted the package/function preference and the global pref is OFF
SQL> --
SQL> select /* Q12 */ count(*)
  2  from   t1
  3  where  (a = ds_test.fnum(20) and b = ds_test.fnum2(40))
  4  or     a = 10;

  COUNT(*)
----------
        10

SQL> 
SQL> @@plan
SQL> set pagesize 1000
SQL> set tab off
SQL> set linesize 250
SQL> set trims on
SQL> column PLAN_TABLE_OUTPUT format a200
SQL> 
SQL> select *
  2  from table(dbms_xplan.display_cursor(format=>'typical +allstats last'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  0d74gdym5fmfv, child number 0
-------------------------------------
select /* Q12 */ count(*) from   t1 where  (a = ds_test.fnum(20) and b
= ds_test.fnum2(40)) or     a = 10

Plan hash value: 3724264953

-----------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                  | Name | Starts | E-Rows |E-Bytes| Cost (%CPU)| E-Time   | A-Rows |   A-Time   | Buffers |
-----------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT           |      |      1 |        |       |     3 (100)|          |      1 |00:00:00.01 |     143 |
|   1 |  SORT AGGREGATE            |      |      1 |      1 |    26 |            |          |      1 |00:00:00.01 |     143 |
|*  2 |   TABLE ACCESS STORAGE FULL| T1   |      1 |     51 |  1326 |     3  (34)| 00:00:01 |     10 |00:00:00.01 |     143 |
-----------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - storage(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))
       filter(("A"=10 OR ("A"="DS_TEST"."FNUM"(20) AND "B"="DS_TEST"."FNUM2"(40))))

Note
-----
   - dynamic statistics used: dynamic sampling (level=2)
   - automatic DOP: Computed Degree of Parallelism is 1 because of no expensive parallel operation


26 rows selected.

SQL> 
SQL> exec dbms_stats.delete_plsql_prefs(user,'ds_test',null,'dynamic_stats')

PL/SQL procedure successfully completed.

SQL> select procedure_name,
  2         dynamic_sampling_on,
  3         dynamic_sampling_off,
  4         dynamic_sampling_choose
  5  from   user_procedures
  6  where  procedure_name like 'FNUM%';

PROCEDURE_NAME       DYN DYN DYN
-------------------- --- --- ---
FNUM2                NO  NO  NO
FNUM                 NO  NO  NO

SQL> 
SQL> --
SQL> -- Back to default
SQL> --
SQL> exec dbms_stats.set_global_plsql_prefs('dynamic_stats',null)

PL/SQL procedure successfully completed.

SQL> 
SQL> @@drop
SQL> drop table t1 purge;

Table dropped.

SQL> drop package ds_test;

Package dropped.

SQL> drop type num_tab;

Type dropped.

SQL> drop type num_row;

Type dropped.

SQL> spool off
